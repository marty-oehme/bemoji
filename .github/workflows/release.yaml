name: Publish release packages
on:
  push:
    tags:
      - v*

jobs:
  build:
    name: Build distribution
    runs-on: ubuntu-latest
    container: alpine

    steps:
      - uses: actions/checkout@v4
      # prepare changelog and version information for release candidate
      - run: |
          sed -ne 's/bm_version=\(.*\)/\1/p' bemoji > NEWEST_VERSION.txt
          awk '/^## \[\d/{p++} p==2{print; exit} p>=1' CHANGELOG.md | head -n -1 | tail -n+3 > NEWEST_CHANGES.txt

      - run: |
          apk update && apk add zip go-md2man
          BM_VERSION=$(cat NEWEST_VERSION.txt)
          mkdir -p build/doc dist
          cp bemoji build
          go-md2man -in README.md -out bemoji.1 && gzip bemoji.1
          cp LICENSE README.md CHANGELOG.md bemoji.1.gz build/doc
          cd build || exit 1
          tar -czvf bemoji-$BM_VERSION.tar.gz *
          zip -r bemoji-$BM_VERSION.zip *
          mv bemoji-$BM_VERSION.tar.gz bemoji-$BM_VERSION.zip ../dist

      - name: Store dist packages
        uses: actions/upload-artifact@v4
        with:
          name: package-distributions
          path: dist/

  create-release:
    name: Create github release
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Grab dist files
        uses: actions/download-artifact@v4
        with:
          name: package-distributions
          path: dist/
      - name: Generate release
        uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Attach files to release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
